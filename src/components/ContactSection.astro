---
// Contact section component
---

<section id="contact" class="section contact-section">
  <div class="container">
    <h2 class="section-title">Trabajemos Juntos</h2>
    
    <div class="contact-content">
      <div class="contact-info">
        <div class="contact-intro glass-effect">
          <h3 class="contact-subtitle">¿Tienes un proyecto en mente?</h3>
          <p class="contact-description">
            Estoy siempre dispuesto a colaborar en nuevos proyectos creativos. 
            Y podemos crear algo increíble juntos.
          </p>
        </div>

        <div class="contact-details">
          <div class="contact-item">
            <div class="contact-icon">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
                <polyline points="22,6 12,13 2,6"/>
              </svg>
            </div>
            <div class="contact-text">
              <span class="contact-label">Email</span>
              <span class="contact-value">thelion.cod@gmail.com</span>
            </div>
          </div>

          <div class="contact-item">
            <div class="contact-icon">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
              </svg>
            </div>
            <div class="contact-text">
              <span class="contact-label">Teléfono</span>
              <span class="contact-value">(+52) 833 312 3894</span>
            </div>
          </div>

          <div class="contact-item">
            <div class="contact-icon">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
                <circle cx="12" cy="10" r="3"/>
              </svg>
            </div>
            <div class="contact-text">
              <span class="contact-label">Ubicación</span>
              <span class="contact-value">Mexico</span>
            </div>
          </div>

          <div class="contact-item">
            <div class="contact-icon">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="12" cy="12" r="10"/>
                <polyline points="12,6 12,12 16,14"/>
              </svg>
            </div>
            <div class="contact-text">
              <span class="contact-label">Disponibilidad</span>
              <span class="contact-value">Lun - Vie, 9:00 - 18:00</span>
            </div>
          </div>
        </div>
      </div>

      <div class="contact-form-container">
        <form 
          class="contact-form glass-effect" 
          id="contact-form"
          action="https://formspree.io/f/joseleonardohdz88@gmail.com"
          method="POST"
        >
          <h3 class="form-title">Envíame un mensaje</h3>
          
          <div class="form-group">
            <label for="name" class="form-label">Nombre completo</label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              class="form-input" 
              required 
              placeholder="Tu nombre"
            />
          </div>

          <div class="form-group">
            <label for="email" class="form-label">Correo electrónico</label>
            <input 
              type="email" 
              id="email" 
              name="_replyto" 
              class="form-input" 
              required 
              placeholder="tu@email.com"
            />
          </div>

          <div class="form-group">
            <label for="message" class="form-label">Mensaje</label>
            <textarea 
              id="message" 
              name="message" 
              class="form-input form-textarea" 
              required 
              rows="5"
              placeholder="Cuéntame sobre tu proyecto..."
            ></textarea>
          </div>

          <!-- Campos ocultos para Formspree -->
          <input type="hidden" name="_to" value="joseleonardohdz88@gmail.com">
          <input type="hidden" name="_subject" value="Nuevo mensaje desde leonardohdz.me">
          <input type="hidden" name="_next" value="https://leonardohdz.me/?mensaje=enviado")

          <button type="submit" class="form-submit">
            <span class="submit-text">Enviar mensaje</span>
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <line x1="22" y1="2" x2="11" y2="13"/>
              <polygon points="22,2 15,22 11,13 2,9"/>
            </svg>
          </button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form') as HTMLFormElement;
    
    if (form) {
      form.addEventListener('submit', async function(e: SubmitEvent) {
        e.preventDefault();
        
        const submitBtn = form.querySelector('.form-submit') as HTMLButtonElement;
        const submitText = form.querySelector('.submit-text') as HTMLElement;
        
        if (submitBtn && submitText) {
          // Change button state
          submitBtn.classList.add('loading');
          submitBtn.disabled = true;
          submitText.textContent = 'Enviando...';
          
          try {
            // Send form data to Formspree
            const formData = new FormData(form);
            const response = await fetch(form.action, {
              method: 'POST',
              body: formData,
              headers: {
                'Accept': 'application/json'
              }
            });
            
            if (response.ok) {
              // Success
              submitBtn.classList.remove('loading');
              submitBtn.classList.add('success');
              submitText.textContent = '¡Mensaje enviado!';
              
              // Reset form
              form.reset();
              
              // Show success message
              showNotification('¡Gracias! Tu mensaje ha sido enviado correctamente.', 'success');
              
            } else {
              throw new Error('Error en el envío');
            }
          } catch (error) {
            // Error
            submitBtn.classList.remove('loading');
            submitBtn.classList.add('error');
            submitText.textContent = 'Error al enviar';
            
            showNotification('Hubo un problema al enviar el mensaje. Intenta nuevamente.', 'error');
          }
          
          // Reset button after 3 seconds
          setTimeout(() => {
            submitBtn.classList.remove('success', 'error');
            submitBtn.disabled = false;
            submitText.textContent = 'Enviar mensaje';
          }, 3000);
        }
      });
    }

    // Form validation and styling
    const inputs = document.querySelectorAll('.form-input') as NodeListOf<HTMLInputElement>;
    inputs.forEach((input: HTMLInputElement) => {
      input.addEventListener('focus', (e: FocusEvent) => {
        const target = e.target as HTMLInputElement;
        target.parentElement?.classList.add('focused');
      });
      
      input.addEventListener('blur', (e: FocusEvent) => {
        const target = e.target as HTMLInputElement;
        if (!target.value) {
          target.parentElement?.classList.remove('focused');
        }
      });
      
      input.addEventListener('input', (e: Event) => {
        const target = e.target as HTMLInputElement;
        if (target.value) {
          target.parentElement?.classList.add('filled');
        } else {
          target.parentElement?.classList.remove('filled');
        }
      });
    });

    // Notification function
    function showNotification(message: string, type: 'success' | 'error') {
      const notification = document.createElement('div');
      notification.className = `notification notification-${type}`;
      notification.textContent = message;
      
      document.body.appendChild(notification);
      
      // Show notification
      setTimeout(() => notification.classList.add('show'), 100);
      
      // Hide notification after 5 seconds
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => document.body.removeChild(notification), 300);
      }, 5000);
    }
  });
</script>

<style>
  /* Ensure proper box sizing for all elements */
  .contact-section *,
  .contact-section *::before,
  .contact-section *::after {
    box-sizing: border-box;
  }

  .contact-section {
    background: linear-gradient(
      135deg,
      rgba(139, 92, 246, 0.1) 0%,
      rgba(236, 72, 153, 0.1) 100%
    );
  }

  .contact-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 4rem;
    align-items: start;
  }

  .contact-info {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .contact-intro {
    padding: 2rem;
  }

  .contact-subtitle {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 1rem;
    background: var(--gradient-bg);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .contact-description {
    font-size: 1.1rem;
    color: var(--text-secondary);
    line-height: 1.7;
  }

  .contact-details {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .contact-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.25rem;
    background: var(--glass-bg);
    border: 1px solid var(--glass-border);
    border-radius: 1rem;
    transition: all 0.3s ease;
  }

  .contact-item:hover {
    border-color: var(--primary-purple);
    transform: translateX(5px);
    box-shadow: 0 5px 20px rgba(139, 92, 246, 0.2);
  }

  .contact-icon {
    width: 50px;
    height: 50px;
    background: var(--gradient-bg);
    border-radius: 0.75rem;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    flex-shrink: 0;
  }

  .contact-text {
    display: flex;
    flex-direction: column;
  }

  .contact-label {
    font-size: 0.85rem;
    color: var(--text-muted);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .contact-value {
    font-size: 1.1rem;
    color: var(--text-primary);
    font-weight: 600;
  }

  /* Contact Form */
  .contact-form-container {
    position: relative;
    width: 100%;
    max-width: 100%;
  }

  .contact-form {
    padding: 2.5rem;
    position: relative;
    overflow: hidden;
    width: 100%;
    box-sizing: border-box;
  }

  .form-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 2rem;
    text-align: center;
    color: var(--text-primary);
  }

  .form-group {
    margin-bottom: 1.5rem;
    position: relative;
    width: 100%;
  }

  .form-label {
    display: block;
    font-size: 0.9rem;
    font-weight: 500;
    color: var(--text-muted);
    margin-bottom: 0.5rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .form-input {
    width: 100%;
    max-width: 100%;
    padding: 1rem 1.25rem;
    background: var(--dark-secondary);
    border: 2px solid var(--glass-border);
    border-radius: 0.75rem;
    color: var(--text-primary);
    font-size: 1rem;
    font-family: 'Inter', sans-serif;
    transition: all 0.3s ease;
    box-sizing: border-box;
  }

  .form-input:focus {
    outline: none;
    border-color: var(--primary-purple);
    box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
  }

  .form-input::placeholder {
    color: var(--text-muted);
  }

  .form-textarea {
    resize: vertical;
    min-height: 120px;
  }

  .form-select {
    cursor: pointer;
  }

  .form-submit {
    width: 100%;
    padding: 1rem 2rem;
    background: var(--gradient-bg);
    border: none;
    border-radius: 50px;
    color: white;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    position: relative;
    overflow: hidden;
  }

  .form-submit:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(139, 92, 246, 0.4);
  }

  .form-submit.loading {
    background: var(--text-muted);
    cursor: not-allowed;
  }

  .form-submit.success {
    background: #10B981;
  }

  .form-submit.error {
    background: #EF4444;
  }

  .form-submit:disabled {
    cursor: not-allowed;
    opacity: 0.7;
  }

  /* Notification Styles */
  .notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 1rem 1.5rem;
    border-radius: 0.5rem;
    color: white;
    font-weight: 600;
    transform: translateX(400px);
    transition: transform 0.3s ease;
    z-index: 1000;
    max-width: 350px;
  }

  .notification.show {
    transform: translateX(0);
  }

  .notification-success {
    background: #10B981;
    border-left: 4px solid #047857;
  }

  .notification-error {
    background: #EF4444;
    border-left: 4px solid #DC2626;
  }

  .form-submit::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.2),
      transparent
    );
    transition: left 0.5s ease;
  }

  .form-submit:hover::before {
    left: 100%;
  }

  /* Form Focus States */
  .form-group.focused .form-label {
    color: var(--primary-purple);
  }

  .form-group.filled .form-label {
    color: var(--text-primary);
  }

  /* Mobile Responsive */
  @media (max-width: 968px) {
    .contact-content {
      grid-template-columns: 1fr;
      gap: 3rem;
    }
  }

  @media (max-width: 768px) {
    .contact-intro,
    .contact-form {
      padding: 1.5rem;
    }

    .contact-item {
      padding: 1rem;
    }

    .contact-icon {
      width: 40px;
      height: 40px;
    }

    /* Form improvements for tablets */
    .form-input {
      padding: 0.875rem 1rem;
      font-size: 0.95rem;
      border-radius: 0.625rem;
    }

    .form-submit {
      padding: 1rem 1.5rem;
      font-size: 1rem;
    }
  }

  @media (max-width: 640px) {
    .section {
      padding: 3rem 1rem;
    }

    .contact-intro,
    .contact-form {
      padding: 1.25rem;
    }

    .contact-subtitle {
      font-size: 1.3rem;
    }

    .contact-description {
      font-size: 1rem;
    }

    .form-input {
      padding: 0.75rem 0.875rem;
      font-size: 0.9rem;
      border-width: 1.5px;
      border-radius: 0.5rem;
    }

    .form-submit {
      padding: 0.875rem 1.25rem;
      font-size: 0.95rem;
    }
  }

  @media (max-width: 480px) {
    .container {
      padding: 0 0.75rem;
    }

    .contact-intro,
    .contact-form {
      padding: 1rem;
    }

    .contact-content {
      gap: 2rem;
    }

    .form-group {
      margin-bottom: 1.25rem;
    }

    .form-input {
      padding: 0.625rem 0.75rem;
      font-size: 0.875rem;
      border-width: 1px;
      border-radius: 0.5rem;
    }

    .form-input:focus {
      box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.1);
    }

    .form-textarea {
      min-height: 100px;
    }

    .form-submit {
      padding: 0.75rem 1rem;
      font-size: 0.9rem;
      border-radius: 1.5rem;
    }

    .contact-item {
      padding: 0.875rem;
      flex-direction: column;
      text-align: center;
      gap: 0.75rem;
    }

    .contact-icon {
      width: 35px;
      height: 35px;
    }
  }

  @media (max-width: 360px) {
    .contact-intro,
    .contact-form {
      padding: 0.75rem;
    }

    .form-input {
      padding: 0.5rem 0.625rem;
      font-size: 0.825rem;
      border-radius: 0.375rem;
    }

    .form-submit {
      padding: 0.625rem 0.875rem;
      font-size: 0.85rem;
    }

    .contact-subtitle {
      font-size: 1.1rem;
    }

    .section-title {
      font-size: 2rem;
    }
  }
</style>
